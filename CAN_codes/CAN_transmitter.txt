#include <SPI.h> 
#include <mcp2515.h>      //Library for using CAN Communication (https://github.com/autowp/arduino-mcp2515/) 
#include <dht.h>     //DHTlib  
#define dhtpin 7        
dht DHT;    
#include "NewPing.h"  //newping
#define TRIGGER_PIN 8
#define ECHO_PIN 9
#define MAX_DISTANCE 400	
NewPing sonar(TRIGGER_PIN, ECHO_PIN, MAX_DISTANCE);
#define ProxSensor 1

struct can_frame canMsg;
 
MCP2515 mcp2515(10);
 
 
void setup()
{
  Serial.begin(9600);
  SPI.begin();      
  pinMode(ProxSensor,INPUT);    
  mcp2515.reset();
  mcp2515.setBitrate(CAN_500KBPS, MCP_8MHZ); //Sets CAN at speed 500KBPS and Clock 8MHz
  mcp2515.setNormalMode();
}
 
 
void loop()
{
	int readData = DHT.read11(dhtpin);

	float tc = DHT.temperature;        
	float h = DHT.humidity;          

	Serial.print("Temperature = ");
	Serial.print(t);
	Serial.print("°C | ");
	Serial.print((t*9.0)/5.0+32.0); 
	float tf=(t*9.0)/5.0+32.0;       
	Serial.println("°F ");
	Serial.print("Humidity = ");
	Serial.print(h);
	Serial.println("% ");
	Serial.println("");

	Serial.print("Distance = ");
	float ultra=sonar.ping_cm()
	Serial.print(ultra);
	Serial.println(" cm");
	
	int k=0;
	
	if(digitalRead(ProxSensor)==HIGH)      
  	{
   		 k=1 ;
 	 }
  	else
  	{
    		 k=0;   
  	}

	delay(100);
 
  canMsg.can_id  = 0x036;           //CAN id as 0x036
  canMsg.can_dlc = 8;               //CAN data length as 8
  canMsg.data[0] = h;               
  canMsg.data[1] = tc;               
  canMsg.data[2] = tf;            
  canMsg.data[3] = ultra;
  canMsg.data[4] = k;
  canMsg.data[5] = 0x00;
  canMsg.data[6] = 0x00;
  canMsg.data[7] = 0x00;
 
  mcp2515.sendMessage(&canMsg);     //Sends the CAN message
  delay(1000);
}
